services:
  postgres:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7
    restart: unless-stopped
    command: ["redis-server","--requirepass","${REDIS_PASSWORD}"]
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: unless-stopped
    env_file: [.env]
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # n8n “se anuncia” com o host público (TLS vem do Caddy)
      WEBHOOK_URL: https://${N8N_PUBLIC_HOST}
      N8N_HOST: ${N8N_PUBLIC_HOST}
      N8N_PROTOCOL: https
      N8N_PORT: 5678

      GENERIC_TIMEZONE: America/Sao_Paulo
      N8N_LOG_LEVEL: debug
      N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE: "true"
      N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: "true"

      # Segurança
      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}
      N8N_BASIC_AUTH_ACTIVE: ${N8N_BASIC_AUTH_ACTIVE}
      N8N_BASIC_AUTH_USER: ${N8N_BASIC_AUTH_USER}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_BASIC_AUTH_PASSWORD}

      # Postgres
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: ${POSTGRES_DB}
      DB_POSTGRESDB_USER: ${POSTGRES_USER}
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_POSTGRESDB_SCHEMA: public

      # Redis (fila)
      QUEUE_BULL_REDIS_HOST: redis
      QUEUE_BULL_REDIS_PORT: 6379
      QUEUE_BULL_REDIS_PASSWORD: ${REDIS_PASSWORD}

      # Disponível nas credenciais do n8n como {{$env.OPENAI_API_KEY}}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    volumes:
      - n8n_data:/home/node/.n8n

  waha:
    image: devlikeapro/waha:latest
    restart: unless-stopped
    depends_on:
      n8n:
        condition: service_started
    environment:
      WHATSAPP_HOOK_URL: https://${N8N_PUBLIC_HOST}/webhook/vianait-whatsapp
      WHATSAPP_DEFAULT_ENGINE: GOWS
      WHATSAPP_HOOK_EVENTS: message
    volumes:
      - waha_sessions:/app/.sessions
      - waha_media:/app/.media

  caddy:
    image: caddy:2.7
    restart: unless-stopped
    # Passa TODAS as variáveis do .env para dentro do container (Caddyfile usa {$VAR})
    env_file:
      - .env
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
    depends_on:
      - n8n
      - waha

volumes:
  pgdata:
  n8n_data:
  waha_sessions:
  waha_media:
  caddy_data:
  caddy_config:
